// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = "mysql://root:123456@localhost:3306/hetec"
}

model User {
    id        String @id @default(uuid())
    email     String @unique
    username  String @unique
    name      String
    password  String
    phone     String @unique
    photo_url String @default("")

    Question Question[]
    Comment  Comment[]

    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    StarQuestion StarQuestion[]
    StarComment  StarComment[]
}

model Category {
    id    String @id @default(uuid())
    title String @unique
    image String

    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    Question Question[]
}

model Images {
    id  String @id @default(uuid())
    url String

    question    Question @relation(fields: [question_id], references: [id])
    question_id String

    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model Question {
    id      String @id @default(uuid())
    title   String
    content String @db.Text
    images  String

    user    User   @relation(fields: [user_id], references: [id])
    user_id String

    category    Category @relation(fields: [category_id], references: [id])
    category_id String

    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    Comment      Comment[]
    Images       Images[]
    StarQuestion StarQuestion[]
    StarComment  StarComment[]
}

model Comment {
    id      String @id @default(uuid())
    content String @db.Text

    user    User   @relation(fields: [user_id], references: [id])
    user_id String

    question    Question @relation(fields: [question_id], references: [id])
    question_id String

    created_at DateTime @default(now())
    updated_at DateTime @default(now())
}

model StarQuestion {
    id String @id @default(uuid())

    user    User   @relation(fields: [user_id], references: [id])
    user_id String

    question    Question @relation(fields: [question_id], references: [id])
    question_id String

    created_at DateTime @default(now())
}

model StarComment {
    id String @id @default(uuid())

    user    User   @relation(fields: [user_id], references: [id])
    user_id String

    question    Question @relation(fields: [question_id], references: [id])
    question_id String

    created_at DateTime @default(now())
}
